use v6.*;
use Resource::Wrangler;
use Test;

plan 8;

my $w = Resource::Wrangler[{ %(
    test => "{~$*CWD}/resources/test".IO,
    broken => class :: { method IO { Empty } }.new
) }].new;

is ~$w.resources<test>, "{~$*CWD}/resources/test", "Parameterization works";

dies-ok {
    use fatal;
    my $path = $w.load-resource-to-path("nonexistent-resource");
    CATCH {
        ok $_.message ~~ /^^ "Unable to access resource "/,
            "Exception message is correct ({$_.message}";
    }
}, "loading a nonexistent-resource dies as expected";

dies-ok {
    use fatal;
    my $path = $w.load-resource-to-path("broken");
    CATCH {
        is $_.message, "Resource 'broken' is not provided by the distribution",
            "Exception message is correct";
    }
}, "Loading a resource that acts like Distribution::Resource but doesn't exist";

my $path;
my $filename = $w.random-sequence;
my $prefix = $*TMPDIR.add: $w.random-sequence;
lives-ok {
    $path = $w.load-resource-to-path("test", :$filename, :$prefix)
}, "Survives loading resource to path";

is ~$path, ~$prefix.add($filename), "The path is as expected";

is $path.IO.slurp, "sometimes-simple-is-actually-simple",
    "Contents are exactly as they should be";
